// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using razor_gpa_web_app.Data;

namespace razor_gpa_web_app.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201024051855_mig01")]
    partial class mig01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntakeNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DegreeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Degree", b =>
                {
                    b.Property<string>("DegreeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumOfYears")
                        .HasColumnType("int");

                    b.HasKey("DegreeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Degree");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.GPA", b =>
                {
                    b.Property<string>("GPAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("GPAValue")
                        .HasColumnType("float")
                        .HasMaxLength(50);

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YearID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GPAID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectModuleID");

                    b.HasIndex("YearID");

                    b.ToTable("GPA");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Grade", b =>
                {
                    b.Property<string>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GPAID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GradeChar")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GradeID");

                    b.HasIndex("DegreeID");

                    b.HasIndex("GPAID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SGPA", b =>
                {
                    b.Property<string>("SGPAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SGPAValue")
                        .HasColumnType("float");

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YearID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SGPAID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("YearID");

                    b.ToTable("SGPA");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Semester", b =>
                {
                    b.Property<string>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.Property<string>("YearID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SemesterID");

                    b.HasIndex("YearID");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SubjectModule", b =>
                {
                    b.Property<string>("SubjectModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("SubjectModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("SubjectModuleID");

                    b.HasIndex("DegreeID");

                    b.ToTable("SubjectModule");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Year", b =>
                {
                    b.Property<string>("YearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("YearNumber")
                        .HasColumnType("datetime2");

                    b.HasKey("YearID");

                    b.ToTable("Year");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("DegreeID");

                    b.HasOne("razor_gpa_web_app.Models.Department", "Department")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", null)
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Degree", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Department", "Department")
                        .WithMany("Degrees")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.GPA", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("GPAs")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("GPAs")
                        .HasForeignKey("StudentID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", "SubjectModule")
                        .WithMany("GPAs")
                        .HasForeignKey("SubjectModuleID");

                    b.HasOne("razor_gpa_web_app.Models.Year", "Year")
                        .WithMany("GPAs")
                        .HasForeignKey("YearID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Grade", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany("Grades")
                        .HasForeignKey("DegreeID");

                    b.HasOne("razor_gpa_web_app.Models.GPA", "GPA")
                        .WithMany("Grades")
                        .HasForeignKey("GPAID");

                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("Grades")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("Grades")
                        .HasForeignKey("StudentID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", "SubjectModule")
                        .WithMany()
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SGPA", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("SGPAs")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "User")
                        .WithMany("SGPAs")
                        .HasForeignKey("StudentID");

                    b.HasOne("razor_gpa_web_app.Models.Year", "Year")
                        .WithMany("SGPAs")
                        .HasForeignKey("YearID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Semester", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Year", "Year")
                        .WithMany("Semesters")
                        .HasForeignKey("YearID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SubjectModule", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeID");
                });
#pragma warning restore 612, 618
        }
    }
}
