// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using razor_gpa_web_app.Data;

namespace razor_gpa_web_app.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ee123472-f3ea-44a6-809f-1ca4fed6c16e",
                            ConcurrencyStamp = "49723812-b59e-4389-8a0a-a0c34d1f9c98",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "ac4c06af-716e-4cd1-a39c-49672105ff7c",
                            ConcurrencyStamp = "a4a9e6e0-d4b6-4b67-add6-9ff220d97cd7",
                            Name = "Staff"
                        },
                        new
                        {
                            Id = "a24781ff-029a-4e92-8cc4-c8e6dd9f01c9",
                            ConcurrencyStamp = "165d61bb-eaae-455a-b73e-12328f40e26b",
                            Name = "HOD"
                        },
                        new
                        {
                            Id = "7ab7df3c-21fc-4881-b136-6672746bb456",
                            ConcurrencyStamp = "6c6bf673-79b5-43d8-a0c1-7c1336b78f9a",
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "00d001c2-1cc5-4c5a-a7a7-c1b08ba1dbfd",
                            RoleId = "ee123472-f3ea-44a6-809f-1ca4fed6c16e"
                        },
                        new
                        {
                            UserId = "db21789e-676b-4951-bd14-81c2aa2d1d07",
                            RoleId = "7ab7df3c-21fc-4881-b136-6672746bb456"
                        },
                        new
                        {
                            UserId = "c02e3dc9-bab3-4ebe-8b86-50611f6baca0",
                            RoleId = "ac4c06af-716e-4cd1-a39c-49672105ff7c"
                        },
                        new
                        {
                            UserId = "e83efdea-d974-413f-a2d7-410c371cdb7c",
                            RoleId = "a24781ff-029a-4e92-8cc4-c8e6dd9f01c9"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FacultyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntakeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DegreeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacultyID");

                    b.HasIndex("IntakeID");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "00d001c2-1cc5-4c5a-a7a7-c1b08ba1dbfd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a4e3c9a-406a-424c-ab38-d081219c83d1",
                            DegreeID = "ddwd232",
                            DepartmentID = "3dfde3",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FacultyID = "23df2",
                            FirstName = "Bimsara",
                            IntakeID = "43t65il",
                            LastName = "Gunarathna",
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "admin@gmail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEEN4Kep2mGX6mwUcQoNQgR18i6dXRQ1cLQ1k8bSIvikpEa3+b7sJidXa2tYEPREn2Q==",
                            PhoneNumberConfirmed = false,
                            RegNum = "D/IT/18/0067",
                            SecurityStamp = "WTYLCK3GBRNTTRTQIBHNKLMNLSRSBJJU",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com",
                            UserRole = 1
                        },
                        new
                        {
                            Id = "db21789e-676b-4951-bd14-81c2aa2d1d07",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a4e3c9a-406a-424c-ab38-d081219c83d1",
                            DegreeID = "ddwd232",
                            DepartmentID = "3dfde3",
                            Email = "student@gmail.com",
                            EmailConfirmed = false,
                            FacultyID = "23df2",
                            FirstName = "Bimsara",
                            IntakeID = "43t65il",
                            LastName = "Gunarathna",
                            LockoutEnabled = true,
                            NormalizedEmail = "STUDENT@GMAIL.COM",
                            NormalizedUserName = "student@gmail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEEN4Kep2mGX6mwUcQoNQgR18i6dXRQ1cLQ1k8bSIvikpEa3+b7sJidXa2tYEPREn2Q==",
                            PhoneNumberConfirmed = false,
                            RegNum = "D/IT/18/0067",
                            SecurityStamp = "WTYLCK3GBRNTTRTQIBHNKLMNLSRSBJJU",
                            TwoFactorEnabled = false,
                            UserName = "student@gmail.com",
                            UserRole = 4
                        },
                        new
                        {
                            Id = "c02e3dc9-bab3-4ebe-8b86-50611f6baca0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a4e3c9a-406a-424c-ab38-d081219c83d1",
                            DegreeID = "ol433",
                            DepartmentID = "qdw",
                            Email = "staff@gmail.com",
                            EmailConfirmed = false,
                            FacultyID = "23df2",
                            FirstName = "Harry",
                            IntakeID = "k5j34b3i",
                            LastName = "Potter",
                            LockoutEnabled = true,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "staff@gmail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEEN4Kep2mGX6mwUcQoNQgR18i6dXRQ1cLQ1k8bSIvikpEa3+b7sJidXa2tYEPREn2Q==",
                            PhoneNumberConfirmed = false,
                            RegNum = "D/IS/18/0015",
                            SecurityStamp = "WTYLCK3GBRNTTRTQIBHNKLMNLSRSBJJU",
                            TwoFactorEnabled = false,
                            UserName = "staff@gmail.com",
                            UserRole = 2
                        },
                        new
                        {
                            Id = "e83efdea-d974-413f-a2d7-410c371cdb7c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a4e3c9a-406a-424c-ab38-d081219c83d1",
                            DegreeID = "ol433",
                            DepartmentID = "qdw",
                            Email = "hod@gmail.com",
                            EmailConfirmed = false,
                            FacultyID = "23df2",
                            FirstName = "Elon",
                            IntakeID = "k5j34b3i",
                            LastName = "Musk",
                            LockoutEnabled = true,
                            NormalizedEmail = "HOD@GMAIL.COM",
                            NormalizedUserName = "hod@gmail.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEEN4Kep2mGX6mwUcQoNQgR18i6dXRQ1cLQ1k8bSIvikpEa3+b7sJidXa2tYEPREn2Q==",
                            PhoneNumberConfirmed = false,
                            RegNum = "D/SE/18/0067",
                            SecurityStamp = "WTYLCK3GBRNTTRTQIBHNKLMNLSRSBJJU",
                            TwoFactorEnabled = false,
                            UserName = "hod@gmail.com",
                            UserRole = 3
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.AcademicYear", b =>
                {
                    b.Property<string>("AcademicYearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AcademicYearID");

                    b.ToTable("AcademicYear");

                    b.HasData(
                        new
                        {
                            AcademicYearID = "myud",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "myrfwfud",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "eveefweveum",
                            StartDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3d3emucdf",
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "ecj235332",
                            StartDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3rcd535c",
                            StartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "ec3fej232",
                            StartDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "veve353vv",
                            StartDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3ffv35efe33",
                            StartDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3dvevfve3ecdf",
                            StartDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3fee33fe33",
                            StartDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3d3vevecdf",
                            StartDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearID = "3fevwefw34fe33",
                            StartDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Degree", b =>
                {
                    b.Property<string>("DegreeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NumOfYears")
                        .HasColumnType("int");

                    b.HasKey("DegreeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Degree");

                    b.HasData(
                        new
                        {
                            DegreeID = "ddwd232",
                            DegreeCode = "IT",
                            DegreeName = "BSc Information Technology",
                            DepartmentID = "3dfde3",
                            NumOfYears = 4
                        },
                        new
                        {
                            DegreeID = "nu654",
                            DegreeCode = "IS",
                            DegreeName = "BSc Information System",
                            DepartmentID = "3dfde3",
                            NumOfYears = 4
                        },
                        new
                        {
                            DegreeID = "64nhf",
                            DegreeCode = "CS",
                            DegreeName = "BSc Computer Science",
                            DepartmentID = "qdw",
                            NumOfYears = 4
                        },
                        new
                        {
                            DegreeID = "ol433",
                            DegreeCode = "SE",
                            DegreeName = "BSc Software Engineering",
                            DepartmentID = "qdw",
                            NumOfYears = 4
                        },
                        new
                        {
                            DegreeID = "234fsg",
                            DegreeCode = "CE",
                            DegreeName = "BSc Computer Engineering",
                            DepartmentID = "32rfrv",
                            NumOfYears = 4
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FacultyID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentID = "3dfde3",
                            DepartmentName = "Information Technology",
                            FacultyID = "23df2"
                        },
                        new
                        {
                            DepartmentID = "qdw",
                            DepartmentName = "Computer Science",
                            FacultyID = "23df2"
                        },
                        new
                        {
                            DepartmentID = "32rfrv",
                            DepartmentName = "Computer Engineering",
                            FacultyID = "23df2"
                        },
                        new
                        {
                            DepartmentID = "3vr3q",
                            DepartmentName = "Computational Mathematics",
                            FacultyID = "23df2"
                        },
                        new
                        {
                            DepartmentID = "dwdw3",
                            DepartmentName = "Aeronautical Engineering",
                            FacultyID = "432rf2"
                        },
                        new
                        {
                            DepartmentID = "gerger",
                            DepartmentName = "Civil Engineering",
                            FacultyID = "432rf2"
                        },
                        new
                        {
                            DepartmentID = "rtebt",
                            DepartmentName = "Electronic & Telecommunication Engineering",
                            FacultyID = "432rf2"
                        },
                        new
                        {
                            DepartmentID = "3jkfqa",
                            DepartmentName = "Mathematics",
                            FacultyID = "432rf2"
                        },
                        new
                        {
                            DepartmentID = "dw22d",
                            DepartmentName = "Mechanical Engineering",
                            FacultyID = "432rf2"
                        },
                        new
                        {
                            DepartmentID = "312ju3dfn",
                            DepartmentName = "Marine engineering",
                            FacultyID = "432rf2"
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Faculty", b =>
                {
                    b.Property<string>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FacultyID");

                    b.ToTable("Faculty");

                    b.HasData(
                        new
                        {
                            FacultyID = "2d3d",
                            FacultyName = "Defence Studies and Strategic Studies"
                        },
                        new
                        {
                            FacultyID = "343d3rdf",
                            FacultyName = "Graduate Studies"
                        },
                        new
                        {
                            FacultyID = "432rf2",
                            FacultyName = "Engineerings"
                        },
                        new
                        {
                            FacultyID = "423f2",
                            FacultyName = "Law "
                        },
                        new
                        {
                            FacultyID = "34f",
                            FacultyName = "Medicine"
                        },
                        new
                        {
                            FacultyID = "kddef43f3di3322",
                            FacultyName = "Research and Development"
                        },
                        new
                        {
                            FacultyID = "23df2",
                            FacultyName = "Computing"
                        },
                        new
                        {
                            FacultyID = "42f4f34",
                            FacultyName = "Built Environment and Spatial Sciences "
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.GPA", b =>
                {
                    b.Property<string>("GPAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("GPAValue")
                        .HasColumnType("float")
                        .HasMaxLength(50);

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GPAID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("GPA");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Grade", b =>
                {
                    b.Property<string>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("CreditValue")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<string>("FinalMarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GradeID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("Grade");

                    b.HasData(
                        new
                        {
                            GradeID = "iiu2983",
                            CreditValue = 4.2000000000000002,
                            FinalMarks = "85 –100",
                            GradeName = "A+"
                        },
                        new
                        {
                            GradeID = "3r3f",
                            CreditValue = 4.0,
                            FinalMarks = "75 –84",
                            GradeName = "A"
                        },
                        new
                        {
                            GradeID = "wff33f",
                            CreditValue = 3.7000000000000002,
                            FinalMarks = "70 –74",
                            GradeName = "A-"
                        },
                        new
                        {
                            GradeID = "3f3f3",
                            CreditValue = 3.2999999999999998,
                            FinalMarks = "65 –69",
                            GradeName = "B+"
                        },
                        new
                        {
                            GradeID = "3ff3f",
                            CreditValue = 3.0,
                            FinalMarks = "60 –64",
                            GradeName = "B"
                        },
                        new
                        {
                            GradeID = "re43",
                            CreditValue = 2.7000000000000002,
                            FinalMarks = "55 –59",
                            GradeName = "B-"
                        },
                        new
                        {
                            GradeID = "6h6h5b",
                            CreditValue = 2.2999999999999998,
                            FinalMarks = "50 –54",
                            GradeName = "C+"
                        },
                        new
                        {
                            GradeID = "56h56hbyg",
                            CreditValue = 2.7000000000000002,
                            FinalMarks = "45 –49",
                            GradeName = "C"
                        },
                        new
                        {
                            GradeID = "dfg5445gtf",
                            CreditValue = 1.7,
                            FinalMarks = "40 –44",
                            GradeName = "C-"
                        },
                        new
                        {
                            GradeID = "54gfge",
                            CreditValue = 1.3,
                            FinalMarks = "35 –39",
                            GradeName = "D+"
                        },
                        new
                        {
                            GradeID = "afg4t54",
                            CreditValue = 0.0,
                            FinalMarks = "ES <35",
                            GradeName = "Ie"
                        },
                        new
                        {
                            GradeID = "67j6j",
                            CreditValue = 0.0,
                            FinalMarks = "CA < 35",
                            GradeName = "Ia"
                        },
                        new
                        {
                            GradeID = "43f3d",
                            CreditValue = 0.0,
                            FinalMarks = "PBCA <35%",
                            GradeName = "Ia"
                        },
                        new
                        {
                            GradeID = "43frg",
                            CreditValue = 0.0,
                            FinalMarks = "Both ES & CA < 35",
                            GradeName = "Ib"
                        },
                        new
                        {
                            GradeID = "43gfsdfgt",
                            CreditValue = 0.0,
                            FinalMarks = "Not eligible",
                            GradeName = "Ne"
                        },
                        new
                        {
                            GradeID = "232fgfd",
                            CreditValue = 0.0,
                            FinalMarks = "Absent",
                            GradeName = "Ab"
                        },
                        new
                        {
                            GradeID = "432txgfge",
                            CreditValue = 0.0,
                            FinalMarks = "Excused",
                            GradeName = "Ex"
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Intake", b =>
                {
                    b.Property<string>("IntakeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IntakeNumber")
                        .HasColumnType("int");

                    b.HasKey("IntakeID");

                    b.ToTable("Intake");

                    b.HasData(
                        new
                        {
                            IntakeID = "wde3",
                            IntakeNumber = 40
                        },
                        new
                        {
                            IntakeID = "hjv32b",
                            IntakeNumber = 39
                        },
                        new
                        {
                            IntakeID = "jbk43l",
                            IntakeNumber = 38
                        },
                        new
                        {
                            IntakeID = "53hb53",
                            IntakeNumber = 37
                        },
                        new
                        {
                            IntakeID = "k5j34b3i",
                            IntakeNumber = 36
                        },
                        new
                        {
                            IntakeID = "43t65il",
                            IntakeNumber = 35
                        },
                        new
                        {
                            IntakeID = "432vuv",
                            IntakeNumber = 34
                        },
                        new
                        {
                            IntakeID = "4u23v",
                            IntakeNumber = 33
                        },
                        new
                        {
                            IntakeID = "oi765",
                            IntakeNumber = 32
                        },
                        new
                        {
                            IntakeID = "fvghwt",
                            IntakeNumber = 31
                        },
                        new
                        {
                            IntakeID = "g423hfvy",
                            IntakeNumber = 30
                        },
                        new
                        {
                            IntakeID = "2jg3vrf",
                            IntakeNumber = 29
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Paper", b =>
                {
                    b.Property<string>("PaperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GPAID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GradeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PaperID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DegreeID");

                    b.HasIndex("GPAID");

                    b.HasIndex("GradeID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectModuleID");

                    b.ToTable("Paper");

                    b.HasData(
                        new
                        {
                            PaperID = "ej32i1123",
                            AcademicYearID = "myud",
                            DegreeID = "ddwd232",
                            GradeID = "iiu2983",
                            SemesterID = "kjei3322",
                            StudentID = "db21789e-676b-4951-bd14-81c2aa2d1d07",
                            SubjectModuleID = "th45hr"
                        },
                        new
                        {
                            PaperID = "jbwfwi3t3223",
                            AcademicYearID = "myud",
                            DegreeID = "ddwd232",
                            GradeID = "3r3f",
                            SemesterID = "kjei3322",
                            StudentID = "db21789e-676b-4951-bd14-81c2aa2d1d07",
                            SubjectModuleID = "657j5j"
                        },
                        new
                        {
                            PaperID = "hjwbu232332",
                            AcademicYearID = "myud",
                            DegreeID = "ddwd232",
                            GradeID = "wff33f",
                            SemesterID = "kjei3322",
                            StudentID = "db21789e-676b-4951-bd14-81c2aa2d1d07",
                            SubjectModuleID = "23ftgw4t5"
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SGPA", b =>
                {
                    b.Property<string>("SGPAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("SGPAValue")
                        .HasColumnType("float");

                    b.Property<string>("SemesterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SGPAID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.ToTable("SGPA");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Semester", b =>
                {
                    b.Property<string>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterNumber")
                        .HasColumnType("int");

                    b.HasKey("SemesterID");

                    b.HasIndex("AcademicYearID");

                    b.ToTable("Semester");

                    b.HasData(
                        new
                        {
                            SemesterID = "kjei3322",
                            AcademicYearID = "myud",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "d33",
                            AcademicYearID = "myrfwfud",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "f3f3rfr",
                            AcademicYearID = "eveefweveum",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "j4n343",
                            AcademicYearID = "3d3emucdf",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "hjh4334432",
                            AcademicYearID = "ecj235332",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "b32briu45",
                            AcademicYearID = "3rcd535c",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "b3i24iu42",
                            AcademicYearID = "ec3fej232",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "54b64",
                            AcademicYearID = "veve353vv",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "5bhi23",
                            AcademicYearID = "3ffv35efe33",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "j4kb52",
                            AcademicYearID = "3dvevfve3ecdf",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "2b34jkbh",
                            AcademicYearID = "3fee33fe33",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "hb4325kb",
                            AcademicYearID = "3d3vevecdf",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "h2b45j",
                            AcademicYearID = "3fevwefw34fe33",
                            SemesterName = "Semester 01",
                            SemesterNumber = 1
                        },
                        new
                        {
                            SemesterID = "34fr4",
                            AcademicYearID = "myud",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "h2b4f4f4fw5j",
                            AcademicYearID = "myrfwfud",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "43ff34cr",
                            AcademicYearID = "eveefweveum",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "fw43",
                            AcademicYearID = "3d3emucdf",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "h2bcf34f45j",
                            AcademicYearID = "ecj235332",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "h2b54gb45j",
                            AcademicYearID = "3rcd535c",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "5egz",
                            AcademicYearID = "ec3fej232",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "h2bg5e45j",
                            AcademicYearID = "veve353vv",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "drz5",
                            AcademicYearID = "3ffv35efe33",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "tre5554",
                            AcademicYearID = "3dvevfve3ecdf",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "54hfrth",
                            AcademicYearID = "3fee33fe33",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "54yh6ht",
                            AcademicYearID = "3d3vevecdf",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        },
                        new
                        {
                            SemesterID = "54y54gh",
                            AcademicYearID = "3fevwefw34fe33",
                            SemesterName = "Semester 02",
                            SemesterNumber = 2
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SubjectModule", b =>
                {
                    b.Property<string>("SubjectModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DegreeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubjectModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("SubjectModuleCreditUnit")
                        .HasColumnType("int");

                    b.Property<string>("SubjectModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("SubjectModuleID");

                    b.HasIndex("DegreeID");

                    b.ToTable("SubjectModule");

                    b.HasData(
                        new
                        {
                            SubjectModuleID = "fwf",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "MF1023",
                            SubjectModuleCreditUnit = 2,
                            SubjectModuleName = "Principles of Management"
                        },
                        new
                        {
                            SubjectModuleID = "efwfw",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT1043",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Fundamentals of Computer System "
                        },
                        new
                        {
                            SubjectModuleID = "3dfkujt6de3",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT1022",
                            SubjectModuleCreditUnit = 2,
                            SubjectModuleName = "Information Technology Concepts "
                        },
                        new
                        {
                            SubjectModuleID = "4h4geg",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT1033",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Fundamentals of Computer Programming"
                        },
                        new
                        {
                            SubjectModuleID = "bfdg5443y",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT1062",
                            SubjectModuleCreditUnit = 2,
                            SubjectModuleName = "Fundamentals of Visual Computing"
                        },
                        new
                        {
                            SubjectModuleID = "vfg5",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "CM1043",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Mathematics for IT - 1"
                        },
                        new
                        {
                            SubjectModuleID = "54h545",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT2013",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Computer Systems Architecture"
                        },
                        new
                        {
                            SubjectModuleID = "r4rfgre",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT2033",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Object Oriented Programming "
                        },
                        new
                        {
                            SubjectModuleID = "4gervf",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT2043",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "System Analysis & Designing"
                        },
                        new
                        {
                            SubjectModuleID = "23ftgw4t5",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT2053",
                            SubjectModuleCreditUnit = 3,
                            SubjectModuleName = "Fundamentals of DBMS"
                        },
                        new
                        {
                            SubjectModuleID = "657j5j",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "IT2072",
                            SubjectModuleCreditUnit = 2,
                            SubjectModuleName = "Visual Computing Project (Group)"
                        },
                        new
                        {
                            SubjectModuleID = "th45hr",
                            DegreeID = "ddwd232",
                            SubjectModuleCode = "CM2052",
                            SubjectModuleCreditUnit = 2,
                            SubjectModuleName = "Probability and Statistics"
                        });
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.YGPA", b =>
                {
                    b.Property<string>("YGPAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcademicYearID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("YGPAValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YGPAID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("StudentID");

                    b.ToTable("YGPA");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("DegreeID");

                    b.HasOne("razor_gpa_web_app.Models.Department", "Department")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("razor_gpa_web_app.Models.Faculty", "Faculty")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("FacultyID");

                    b.HasOne("razor_gpa_web_app.Models.Intake", "Intake")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("IntakeID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", null)
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Degree", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Department", "Department")
                        .WithMany("Degrees")
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Department", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.GPA", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.AcademicYear", "AcademicYear")
                        .WithMany("GPAs")
                        .HasForeignKey("AcademicYearID");

                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("GPAs")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("GPAs")
                        .HasForeignKey("StudentID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", "SubjectModule")
                        .WithMany("GPAs")
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Grade", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Semester", null)
                        .WithMany("Grades")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", null)
                        .WithMany("Grades")
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Paper", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.AcademicYear", "AcademicYear")
                        .WithMany("Papers")
                        .HasForeignKey("AcademicYearID");

                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany("Papers")
                        .HasForeignKey("DegreeID");

                    b.HasOne("razor_gpa_web_app.Models.GPA", "GPA")
                        .WithMany("Papers")
                        .HasForeignKey("GPAID");

                    b.HasOne("razor_gpa_web_app.Models.Grade", "Grade")
                        .WithMany("Papers")
                        .HasForeignKey("GradeID");

                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("Papers")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("Papers")
                        .HasForeignKey("StudentID");

                    b.HasOne("razor_gpa_web_app.Models.SubjectModule", "SubjectModule")
                        .WithMany()
                        .HasForeignKey("SubjectModuleID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SGPA", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.AcademicYear", "AcademicYear")
                        .WithMany("SGPAs")
                        .HasForeignKey("AcademicYearID");

                    b.HasOne("razor_gpa_web_app.Models.Semester", "Semester")
                        .WithMany("SGPAs")
                        .HasForeignKey("SemesterID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "User")
                        .WithMany("SGPAs")
                        .HasForeignKey("StudentID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.Semester", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.AcademicYear", "AcademicYear")
                        .WithMany("Semesters")
                        .HasForeignKey("AcademicYearID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.SubjectModule", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.Degree", "Degree")
                        .WithMany("SubjectModules")
                        .HasForeignKey("DegreeID");
                });

            modelBuilder.Entity("razor_gpa_web_app.Models.YGPA", b =>
                {
                    b.HasOne("razor_gpa_web_app.Models.AcademicYear", "AcademicYear")
                        .WithMany("YGPAs")
                        .HasForeignKey("AcademicYearID");

                    b.HasOne("razor_gpa_web_app.Areas.Identity.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("YGPAs")
                        .HasForeignKey("StudentID");
                });
#pragma warning restore 612, 618
        }
    }
}
